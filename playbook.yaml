---
- name: Install Docker and Run container
  hosts: all
  become: yes
  vars:
    arch_mapping:
      x86_64: amd64
      aarch64: arm64
      ansible_python_interpreter: /usr/bin/python
  vars_files:
  - vars/default.yaml
  tasks:
  - name: update and upgrade all pkg to the latest versions
    apt:
      update_cache: yes
      upgrade: dist
      cache_valid_time: 3600
  - name: install required packages
    apt:
      pkg:
        - ca-certificates
        - curl
        - apt-transport-https
        - gnupg
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
      state: latest
      update_cache: true
  - name: create folder keyrings for GPG docker's
    file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'
  - name: add GPG key of Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      keyring: /etc/apt/keyrings/docker.gpg
      state: present
  - name: print arch variables
    debug:
      msg: "Architecture: {{ ansible_architecture }}, Codename: {{ ansible_lsb.codename }}"
  #- name: add Docker repo
  #  apt_repository:
  #    repo: >-
  #        deb [arch={{ arch_mapping[ansible_architecture] | default(ansible_architecture) }}
  #        signed-by=/etc/apt/keyrings/docker.asc]
  #        https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
  #    filename: docker
  #    state: present
  - name: Add docker repos
    shell: |
      sudo install -m 0755 -d /etc/apt/keyrings
      sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
      sudo chmod a+r /etc/apt/keyrings/docker.asc
      echo \
       "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
       $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  - name: install Docker and related pkg
    apt:
      name: "{{ item }}"
      state: present
      update_cache: true
    loop:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin 
      - python-is-python3
    #  - python-docker
  - name: add group docker
    group:
      name: docker
      state: present
  - name: add user to group docker
    user:
      name: "{{ item }}"
      groups: docker
      append: true
    loop:
    - anwar
    - jenkins
  - name: Install Python 3.5 and reset selection to auto
    alternatives:
      name: python
      path: /usr/bin/python3.10
      link: /usr/bin/python
      priority: 10

  - name: enable and start docker service
    systemd:
      name: "{{ item }}"
      state: started
      enabled: true
    loop:
     - docker.service
     - containerd.service
  - name: Pull image ubuntu 22.04
    docker_image:
      name: "{{ container_image }}"
      source: pull

  - name: Create containers
    docker_container:
      name: "{{ container_name }}{{ item }}"
      image: "{{ container_image }}"
      command: "{{ container_command }}"
      state: present
    with_sequence: count={{ containers }} 